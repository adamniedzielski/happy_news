name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ghcr.io/adamniedzielski/happy_news:${{ github.sha }}
          target: ci
  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/adamniedzielski/happy_news:${{ github.sha }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    env:
      DATABASE_HOST: postgres
      DATABASE_USERNAME: postgres
      GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
    services:
      postgres:
        image: postgres:11.6-alpine
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    defaults:
      run:
        working-directory: /happy_news

    steps:
      - name: Run Rubocop
        run: |
          bundle exec rubocop
      - name: Run tests
        run: |
          bundle exec rails db:setup spec
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Build, push and deploy to Heroku
        uses: jctaveras/heroku-deploy@v2.1.3
        with:
          email: ${{ secrets.HEROKU_EMAIL }}
          api_key: ${{ secrets.HEROKU_API_KEY }}
          app_name: happy-news-berlin
          dockerfile_path: ''
          options: --target production
