name: Ruby

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ghtoken_product_demo

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2
      - name: Build Docker image
        run: run: docker build . --target ci --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  test:
    needs: build
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.6-alpine
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:

    - name: Run Rubocop
      run: |
        docker run happy_news bundle exec rubocop
    - name: Run tests
      run: |
        docker run --add-host=host.docker.internal:host-gateway --env DATABASE_HOST=host.docker.internal --env DATABASE_USERNAME=postgres --env GMAIL_USERNAME=${{ secrets.GMAIL_USERNAME }} happy_news bundle exec rails db:setup spec
